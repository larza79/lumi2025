name: Release Pipeline

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  ORG: larza79
  IMAGE_NAME: larza79/lumi
  CHART_NAME: lumi

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
      git-short-hash: ${{ steps.vars.outputs.git-short-hash }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up variables
        id: vars
        run: |
          echo "git-short-hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "release-tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.vars.outputs.git-short-hash }}
            type=ref,event=tag

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

  update-helm-chart:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up variables
        id: vars
        run: |
          echo "git-short-hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "release-tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: "3.12.0"

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Helm chart values
        run: |
          # Update the image tag in values.yaml (repository is already correct)
          sed -i "s|tag: \"0.0.1\"|tag: \"${{ needs.build-and-push.outputs.git-short-hash }}\"|g" charts/lumi/values.yaml

          # Update the chart version and appVersion in Chart.yaml
          sed -i "s|version: 0.1.0|version: ${{ steps.vars.outputs.release-tag }}|g" charts/lumi/Chart.yaml
          sed -i "s|appVersion: \"1.16.0\"|appVersion: \"${{ steps.vars.outputs.release-tag }}\"|g" charts/lumi/Chart.yaml

      - name: Package Helm chart
        run: |
          helm package charts/lumi --version ${{ steps.vars.outputs.release-tag }}

      - name: Push Helm chart to OCI registry
        run: |
          helm push lumi-${{ steps.vars.outputs.release-tag }}.tgz oci://${{ env.REGISTRY }}/${{ env.ORG }}/charts
